1 
abs(LocalInt) 
2 
length < -1
3 
-1 < length
4 
state[-1]
5 
state[0]
6 
sum(map((lambda x : if length < -1 then: -1 else: 1), (state[:-1] - state[-1:])))
7 
sum(map((lambda x : if 0 < abs(LocalInt)  then: 1 else: -1), (state[:1] - state[0:])))
8 
(if state[-1] < length then: 1 else: 0 + sum(map((lambda x : if 1 < abs(LocalInt)  then: 1 else: 0), (state[:-1] - state[1:]))))
9 
(if state[0] < length then: 1 else: 0 + sum(map((lambda x : if 1 < abs(LocalInt)  then: 1 else: 0), (state[:-1] - state[1:]))))
1 
abs(LocalInt) 
2 
-1 < length
3 
state[-1]
4 
state[0]
5 
sum(map((lambda x : if abs(LocalInt)  < -1 then: -1 else: 1), (state[-1:] - state[:-1])))
6 
sum(map((lambda x : if abs(LocalInt)  < 1 then: -1 else: 1), (state[0:] - state[:1])))
1 
abs(LocalInt) 
2 
-1 < length
3 
state[-1]
4 
state[0]
5 
sum(map((lambda x : if -1 < length then: 1 else: -1), (state[-1:] - state[:-1])))
6 
sum(map((lambda x : if 0 < abs(LocalInt)  then: 1 else: -1), (state[0:] - state[:1])))
7 
(if state[-1] < length then: 1 else: 0 + sum(map((lambda x : if 1 < abs(LocalInt)  then: 1 else: 0), (state[1:] - state[:-1]))))
8 
(if state[0] < length then: 1 else: 0 + sum(map((lambda x : if 1 < abs(LocalInt)  then: 1 else: 0), (state[1:] - state[:-1]))))
1 
sum(local_list)
2 
sum(state)
3 
-1 < length
4 
(length - -1)
5 
(length - 0)
6 
(length - 1)
1 
abs(LocalInt) 
2 
length < -1
3 
-1 < length
4 
state[-1]
5 
state[0]
6 
sum(map((lambda x : if length < -1 then: -1 else: 1), (state[:-1] - state[-1:])))
7 
sum(map((lambda x : if 0 < abs(LocalInt)  then: 1 else: -1), (state[:1] - state[0:])))
8 
(if state[-1] < length then: 1 else: 0 + sum(map((lambda x : if 1 < abs(LocalInt)  then: 1 else: 0), (state[:-1] - state[1:]))))
9 
(if state[0] < length then: 1 else: 0 + sum(map((lambda x : if 1 < abs(LocalInt)  then: 1 else: 0), (state[:-1] - state[1:]))))
1 
abs(LocalInt) 
2 
-1 < length
3 
state[-1]
4 
state[0]
5 
sum(map((lambda x : if -1 < abs(LocalInt)  then: 1 else: -1), (state[:-1] - state[-1:])))
6 
sum(map((lambda x : if 0 < abs(LocalInt)  then: 1 else: -1), (state[:1] - state[0:])))
1 
abs(LocalInt) 
2 
length < -1
3 
-1 < length
4 
state[-1]
5 
state[0]
6 
sum(map((lambda x : if length < abs(LocalInt)  then: -1 else: 1), (state[:-1] - state[-1:])))
7 
sum(map((lambda x : if abs(LocalInt)  < 1 then: -1 else: 1), (state[:1] - state[0:])))
1 
abs(LocalInt) 
1 
abs(LocalInt) 
1 
abs(LocalInt) 
2 
length < -1
3 
-1 < length
4 
state[-1]
5 
state[0]
6 
sum(map((lambda x : if length < abs(LocalInt)  then: -1 else: 1), (state[-1:] - state[:-1])))
7 
sum(map((lambda x : if abs(LocalInt)  < 1 then: -1 else: 1), (state[0:] - state[:1])))
8 
(if 1 < state[0] then: 0 else: -1 + sum(map((lambda x : if length < abs(LocalInt)  then: -1 else: 1), (state[-1:] - state[:-1]))))
9 
(if state[-1] < length then: 1 else: 0 + sum(map((lambda x : if 1 < abs(LocalInt)  then: 1 else: 0), (state[1:] - state[:-1]))))
10 
(if state[0] < length then: 1 else: 0 + sum(map((lambda x : if 1 < abs(LocalInt)  then: 1 else: 0), (state[1:] - state[:-1]))))
1 
abs(LocalInt) 
2 
length < -1
3 
-1 < length
4 
state[-1]
5 
state[0]
6 
sum(map((lambda x : if length < -1 then: -1 else: 1), (state[-1:] - state[:-1])))
7 
sum(map((lambda x : if 0 < abs(LocalInt)  then: 1 else: -1), (state[0:] - state[:1])))
1 
abs(LocalInt) 
1 
abs(LocalInt) 
2 
-1 < length
3 
state[-1]
4 
state[0]
5 
sum(map((lambda x : if -1 < length then: 1 else: -1), (state[:-1] - state[-1:])))
6 
sum(map((lambda x : if 0 < abs(LocalInt)  then: 1 else: -1), (state[:1] - state[0:])))
7 
(if state[-1] < length then: 1 else: 0 + sum(map((lambda x : if 1 < abs(LocalInt)  then: 1 else: 0), (state[:-1] - state[1:]))))
8 
(if state[0] < length then: 1 else: 0 + sum(map((lambda x : if 1 < abs(LocalInt)  then: 1 else: 0), (state[:-1] - state[1:]))))
1 
abs(LocalInt) 
2 
-1 < length
3 
state[-1]
4 
state[0]
5 
sum(map((lambda x : if -1 < abs(LocalInt)  then: 1 else: -1), (state[-1:] - state[:-1])))
6 
sum(map((lambda x : if 0 < abs(LocalInt)  then: 1 else: -1), (state[0:] - state[:1])))
1 
abs(LocalInt) 
2 
length < -1
3 
-1 < length
4 
state[-1]
5 
state[0]
6 
sum(map((lambda x : if abs(LocalInt)  < length then: 1 else: -1), (state[-1:] - state[:-1])))
7 
sum(map((lambda x : if abs(LocalInt)  < 1 then: -1 else: 1), (state[0:] - state[:1])))
8 
(if 1 < state[0] then: 0 else: -1 + sum(map((lambda x : if abs(LocalInt)  < length then: 1 else: -1), (state[-1:] - state[:-1]))))
9 
(if state[-1] < length then: 1 else: 0 + sum(map((lambda x : if 1 < abs(LocalInt)  then: 1 else: 0), (state[1:] - state[:-1]))))
10 
(if state[0] < length then: 1 else: 0 + sum(map((lambda x : if 1 < abs(LocalInt)  then: 1 else: 0), (state[1:] - state[:-1]))))
1 
sum(local_list)
2 
sum(state)
3 
-1 < length
4 
(length - -1)
5 
(length - 0)
6 
(length - 1)
1 
sum(local_list)
2 
sum(state)
3 
length < -1
4 
-1 < length
5 
(length - -1)
6 
(length - 0)
7 
(length - 1)
1 
sum(local_list)
2 
sum(state)
3 
-1 < length
4 
(1 * length)
5 
(length - 1)
1 
sum(local_list)
2 
sum(state)
3 
-1 < length
4 
(1 * length)
5 
(length - 1)
1 
sum(local_list)
2 
sum(state)
3 
length < -1
4 
-1 < length
5 
(length * 1)
6 
(length - 1)
1 
sum(local_list)
2 
sum(state)
3 
length < -1
4 
-1 < length
5 
(length * 1)
6 
(length - 1)
1 
sum(local_list)
2 
sum(state)
3 
length < -1
4 
-1 < length
5 
(length * 1)
6 
(length - 1)
1 
local_list[-1:]
2 
length < length
3 
-1 < length
4 
(if length < length then: -1 else: 1 + if length < length then: -1 else: 1)
1 
local_list[-1:]
2 
length < length
3 
-1 < length
4 
(if length < length then: -1 else: 1 + if length < length then: -1 else: 1)
1 
local_list[-1:]
2 
length < length
3 
-1 < length
4 
(if length < length then: -1 else: 1 + if length < length then: -1 else: 1)
1 
local_list[-1:]
2 
length < length
3 
-1 < length
4 
(if length < length then: -1 else: 1 + if length < length then: -1 else: 1)
1 
sum(local_list)
2 
sum(state)
3 
length < length
4 
-1 < length
5 
(length * 1)
6 
(length - 1)
7 
(length - (1 - -1))
1 
sum(local_list)
2 
sum(state)
3 
length < length
4 
-1 < length
5 
(length * 1)
6 
(length - 1)
7 
(length - (1 - -1))
